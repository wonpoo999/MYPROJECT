plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.13'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain { languageVersion = JavaLanguageVersion.of(17) }
}

repositories { mavenCentral() }

dependencies {
    // Servlet stack
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // WebClient
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'io.projectreactor.netty:reactor-netty-http'

    // Security / JPA
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // ✅ Oracle JDBC (필수)
    runtimeOnly 'com.oracle.database.jdbc:ojdbc11:23.5.0.24.07'

    // H2(로컬 테스트용 필요 시 유지)
    runtimeOnly 'com.h2database:h2'

    // Validation & Actuator
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly  'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly  'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

    // Lombok & @ConfigurationProperties
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
}

tasks.named('test') { useJUnitPlatform() }
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += ['-parameters']
}
